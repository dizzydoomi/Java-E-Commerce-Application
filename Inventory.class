//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

import java.util.ArrayList;
import java.util.Iterator;

public class Inventory extends ProductStockContainer {
    private ArrayList<Product> products;
    private ArrayList<Integer> stocks;

    public Inventory() {
        this.fillInventory();
    }

    public ArrayList<Product> getInventoryList() {
        return this.products;
    }

    public int getProductQuantity(Product product) {
        for(int i = 0; i < this.products.size(); ++i) {
            if (((Product)this.products.get(i)).getProductId() == product.getProductId()) {
                return (Integer)this.stocks.get(i);
            }
        }

        return -1;
    }

    public void addProductQuantity(Product product, int quantity) {
        boolean flag = false;

        for(int i = 0; i < this.products.size(); ++i) {
            if (((Product)this.products.get(i)).getProductId() == product.getProductId()) {
                this.stocks.set(i, (Integer)this.stocks.get(i) + quantity);
                flag = true;
            }
        }

        if (!flag) {
            this.products.add(product);
            this.stocks.add(quantity);
        }

    }

    public int removeProductQuantity(Product product, int quantity) {
        int flag = 0;

        for(int i = 0; i < this.products.size(); ++i) {
            if (((Product)this.products.get(i)).getProductId() == product.getProductId() && (Integer)this.stocks.get(i) > quantity) {
                this.stocks.set(i, (Integer)this.stocks.get(i) - quantity);
                flag = 1;
            }
        }

        return flag;
    }

    public Product getProductInfo(Product product) {
        for(int i = 0; i < this.products.size(); ++i) {
            if (((Product)this.products.get(i)).getProductId() == product.getProductId()) {
                return (Product)this.products.get(i);
            }
        }

        return null;
    }

    public int getNumOfProducts() {
        return this.products.size();
    }

    public Product getProductById(int productId) {
        Iterator var2 = this.products.iterator();

        Product product;
        do {
            if (!var2.hasNext()) {
                return null;
            }

            product = (Product)var2.next();
        } while(product.getProductId() != productId);

        return product;
    }

    public void fillInventory() {
        this.products = new ArrayList();
        this.stocks = new ArrayList();
        Product product1 = new Product("The Shawshank Redemption", 3382, 20.0D);
        this.products.add(product1);
        this.stocks.add(27);
        Product product2 = new Product("Avengers", 3928, 34.0D);
        this.products.add(product2);
        this.stocks.add(89);
        Product product3 = new Product("Harry Potter", 1389, 47.0D);
        this.products.add(product3);
        this.stocks.add(123);
        Product product4 = new Product("Captain America", 2891, 28.0D);
        this.products.add(product4);
        this.stocks.add(98);
        Product product5 = new Product("Clash of The Titans", 4823, 27.0D);
        this.products.add(product5);
        this.stocks.add(9);
        Product product6 = new Product("Avatar", 1226, 19.0D);
        this.products.add(product6);
        this.stocks.add(56);
        Product product7 = new Product("The Matrix", 5992, 25.0D);
        this.products.add(product7);
        this.stocks.add(22);
        Product product8 = new Product("Titanic", 9212, 30.0D);
        this.products.add(product8);
        this.stocks.add(28);
        Product product9 = new Product("The Terminator", 2783, 40.0D);
        this.products.add(product9);
        this.stocks.add(189);
    }
}
